/*
 * KubeVault
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * Contact: kubevault@appscode.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kubevault.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.kubevault.client.models.ComGithubKubevaultOperatorApisCoreV1alpha1BackendStorageSpec;
import com.kubevault.client.models.ComGithubKubevaultOperatorApisCoreV1alpha1PodPolicy;
import com.kubevault.client.models.ComGithubKubevaultOperatorApisCoreV1alpha1TLSPolicy;
import com.kubevault.client.models.ComGithubKubevaultOperatorApisCoreV1alpha1UnsealerSpec;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec
 */

public class ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec {
  @SerializedName("TLS")
  private ComGithubKubevaultOperatorApisCoreV1alpha1TLSPolicy TLS = null;

  @SerializedName("backendStorage")
  private ComGithubKubevaultOperatorApisCoreV1alpha1BackendStorageSpec backendStorage = null;

  @SerializedName("baseImage")
  private String baseImage = null;

  @SerializedName("configMapName")
  private String configMapName = null;

  @SerializedName("nodes")
  private Integer nodes = null;

  @SerializedName("podPolicy")
  private ComGithubKubevaultOperatorApisCoreV1alpha1PodPolicy podPolicy = null;

  @SerializedName("unsealer")
  private ComGithubKubevaultOperatorApisCoreV1alpha1UnsealerSpec unsealer = null;

  @SerializedName("version")
  private String version = null;

  public ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec TLS(ComGithubKubevaultOperatorApisCoreV1alpha1TLSPolicy TLS) {
    this.TLS = TLS;
    return this;
  }

   /**
   * TLS policy of vault nodes
   * @return TLS
  **/
  @ApiModelProperty(value = "TLS policy of vault nodes")
  public ComGithubKubevaultOperatorApisCoreV1alpha1TLSPolicy getTLS() {
    return TLS;
  }

  public void setTLS(ComGithubKubevaultOperatorApisCoreV1alpha1TLSPolicy TLS) {
    this.TLS = TLS;
  }

  public ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec backendStorage(ComGithubKubevaultOperatorApisCoreV1alpha1BackendStorageSpec backendStorage) {
    this.backendStorage = backendStorage;
    return this;
  }

   /**
   * backend storage configuration for vault
   * @return backendStorage
  **/
  @ApiModelProperty(required = true, value = "backend storage configuration for vault")
  public ComGithubKubevaultOperatorApisCoreV1alpha1BackendStorageSpec getBackendStorage() {
    return backendStorage;
  }

  public void setBackendStorage(ComGithubKubevaultOperatorApisCoreV1alpha1BackendStorageSpec backendStorage) {
    this.backendStorage = backendStorage;
  }

  public ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec baseImage(String baseImage) {
    this.baseImage = baseImage;
    return this;
  }

   /**
   * Base image to use for a Vault deployment.
   * @return baseImage
  **/
  @ApiModelProperty(required = true, value = "Base image to use for a Vault deployment.")
  public String getBaseImage() {
    return baseImage;
  }

  public void setBaseImage(String baseImage) {
    this.baseImage = baseImage;
  }

  public ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec configMapName(String configMapName) {
    this.configMapName = configMapName;
    return this;
  }

   /**
   * Name of the ConfigMap for Vault&#39;s configuration In this configMap contain extra config for vault
   * @return configMapName
  **/
  @ApiModelProperty(value = "Name of the ConfigMap for Vault's configuration In this configMap contain extra config for vault")
  public String getConfigMapName() {
    return configMapName;
  }

  public void setConfigMapName(String configMapName) {
    this.configMapName = configMapName;
  }

  public ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec nodes(Integer nodes) {
    this.nodes = nodes;
    return this;
  }

   /**
   * Number of nodes to deploy for a Vault deployment. Default: 1.
   * @return nodes
  **/
  @ApiModelProperty(value = "Number of nodes to deploy for a Vault deployment. Default: 1.")
  public Integer getNodes() {
    return nodes;
  }

  public void setNodes(Integer nodes) {
    this.nodes = nodes;
  }

  public ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec podPolicy(ComGithubKubevaultOperatorApisCoreV1alpha1PodPolicy podPolicy) {
    this.podPolicy = podPolicy;
    return this;
  }

   /**
   * PodPolicy defines the policy for pods owned by vault operator. This field cannot be updated once the CR is created.
   * @return podPolicy
  **/
  @ApiModelProperty(value = "PodPolicy defines the policy for pods owned by vault operator. This field cannot be updated once the CR is created.")
  public ComGithubKubevaultOperatorApisCoreV1alpha1PodPolicy getPodPolicy() {
    return podPolicy;
  }

  public void setPodPolicy(ComGithubKubevaultOperatorApisCoreV1alpha1PodPolicy podPolicy) {
    this.podPolicy = podPolicy;
  }

  public ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec unsealer(ComGithubKubevaultOperatorApisCoreV1alpha1UnsealerSpec unsealer) {
    this.unsealer = unsealer;
    return this;
  }

   /**
   * unseal configuration for vault
   * @return unsealer
  **/
  @ApiModelProperty(value = "unseal configuration for vault")
  public ComGithubKubevaultOperatorApisCoreV1alpha1UnsealerSpec getUnsealer() {
    return unsealer;
  }

  public void setUnsealer(ComGithubKubevaultOperatorApisCoreV1alpha1UnsealerSpec unsealer) {
    this.unsealer = unsealer;
  }

  public ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version of Vault to be deployed.
   * @return version
  **/
  @ApiModelProperty(required = true, value = "Version of Vault to be deployed.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec = (ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec) o;
    return Objects.equals(this.TLS, comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec.TLS) &&
        Objects.equals(this.backendStorage, comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec.backendStorage) &&
        Objects.equals(this.baseImage, comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec.baseImage) &&
        Objects.equals(this.configMapName, comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec.configMapName) &&
        Objects.equals(this.nodes, comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec.nodes) &&
        Objects.equals(this.podPolicy, comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec.podPolicy) &&
        Objects.equals(this.unsealer, comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec.unsealer) &&
        Objects.equals(this.version, comGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(TLS, backendStorage, baseImage, configMapName, nodes, podPolicy, unsealer, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubKubevaultOperatorApisCoreV1alpha1VaultServerSpec {\n");
    
    sb.append("    TLS: ").append(toIndentedString(TLS)).append("\n");
    sb.append("    backendStorage: ").append(toIndentedString(backendStorage)).append("\n");
    sb.append("    baseImage: ").append(toIndentedString(baseImage)).append("\n");
    sb.append("    configMapName: ").append(toIndentedString(configMapName)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    podPolicy: ").append(toIndentedString(podPolicy)).append("\n");
    sb.append("    unsealer: ").append(toIndentedString(unsealer)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

