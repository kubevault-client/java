/*
 * KubeVault
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.1.0
 * Contact: kubevault@appscode.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.kubevault.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * vault doc: https://www.vaultproject.io/docs/configuration/storage/google-cloud-storage.html  GcsSpec defines configuration to set up Google Cloud Storage as backend storage in vault
 */
@ApiModel(description = "vault doc: https://www.vaultproject.io/docs/configuration/storage/google-cloud-storage.html  GcsSpec defines configuration to set up Google Cloud Storage as backend storage in vault")

public class V1alpha1GcsSpec {
  @SerializedName("bucket")
  private String bucket = null;

  @SerializedName("chunkSize")
  private String chunkSize = null;

  @SerializedName("credentialPath")
  private String credentialPath = null;

  @SerializedName("haEnabled")
  private Boolean haEnabled = null;

  @SerializedName("maxParallet")
  private Integer maxParallet = null;

  public V1alpha1GcsSpec bucket(String bucket) {
    this.bucket = bucket;
    return this;
  }

   /**
   * Specifies the name of the bucket to use for storage.
   * @return bucket
  **/
  @ApiModelProperty(required = true, value = "Specifies the name of the bucket to use for storage.")
  public String getBucket() {
    return bucket;
  }

  public void setBucket(String bucket) {
    this.bucket = bucket;
  }

  public V1alpha1GcsSpec chunkSize(String chunkSize) {
    this.chunkSize = chunkSize;
    return this;
  }

   /**
   * Specifies the maximum size (in kilobytes) to send in a single request. If set to 0, it will attempt to send the whole object at once, but will not retry any failures.
   * @return chunkSize
  **/
  @ApiModelProperty(value = "Specifies the maximum size (in kilobytes) to send in a single request. If set to 0, it will attempt to send the whole object at once, but will not retry any failures.")
  public String getChunkSize() {
    return chunkSize;
  }

  public void setChunkSize(String chunkSize) {
    this.chunkSize = chunkSize;
  }

  public V1alpha1GcsSpec credentialPath(String credentialPath) {
    this.credentialPath = credentialPath;
    return this;
  }

   /**
   * Google application credential path
   * @return credentialPath
  **/
  @ApiModelProperty(value = "Google application credential path")
  public String getCredentialPath() {
    return credentialPath;
  }

  public void setCredentialPath(String credentialPath) {
    this.credentialPath = credentialPath;
  }

  public V1alpha1GcsSpec haEnabled(Boolean haEnabled) {
    this.haEnabled = haEnabled;
    return this;
  }

   /**
   * Specifies if high availability mode is enabled.
   * @return haEnabled
  **/
  @ApiModelProperty(value = "Specifies if high availability mode is enabled.")
  public Boolean isHaEnabled() {
    return haEnabled;
  }

  public void setHaEnabled(Boolean haEnabled) {
    this.haEnabled = haEnabled;
  }

  public V1alpha1GcsSpec maxParallet(Integer maxParallet) {
    this.maxParallet = maxParallet;
    return this;
  }

   /**
   *   Specifies the maximum number of parallel operations to take place.
   * @return maxParallet
  **/
  @ApiModelProperty(value = "  Specifies the maximum number of parallel operations to take place.")
  public Integer getMaxParallet() {
    return maxParallet;
  }

  public void setMaxParallet(Integer maxParallet) {
    this.maxParallet = maxParallet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1GcsSpec v1alpha1GcsSpec = (V1alpha1GcsSpec) o;
    return Objects.equals(this.bucket, v1alpha1GcsSpec.bucket) &&
        Objects.equals(this.chunkSize, v1alpha1GcsSpec.chunkSize) &&
        Objects.equals(this.credentialPath, v1alpha1GcsSpec.credentialPath) &&
        Objects.equals(this.haEnabled, v1alpha1GcsSpec.haEnabled) &&
        Objects.equals(this.maxParallet, v1alpha1GcsSpec.maxParallet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bucket, chunkSize, credentialPath, haEnabled, maxParallet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1GcsSpec {\n");
    
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    chunkSize: ").append(toIndentedString(chunkSize)).append("\n");
    sb.append("    credentialPath: ").append(toIndentedString(credentialPath)).append("\n");
    sb.append("    haEnabled: ").append(toIndentedString(haEnabled)).append("\n");
    sb.append("    maxParallet: ").append(toIndentedString(maxParallet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

